<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Go on Ancordss-Blog!</title>
    <link>https://ancordss.github.io/tags/go/</link>
    <description>Recent content in Go on Ancordss-Blog!</description>
    <image>
      <url>https://avatars.githubusercontent.com/u/87324382?s=400&amp;u=3a0cbb2958a9346ac0d43164be8903afb12a511e&amp;v=4</url>
      <link>https://avatars.githubusercontent.com/u/87324382?s=400&amp;u=3a0cbb2958a9346ac0d43164be8903afb12a511e&amp;v=4</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 Oct 2023 16:52:34 -0600</lastBuildDate><atom:link href="https://ancordss.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Go-Kafka implementation</title>
      <link>https://ancordss.github.io/post/getting-staterd-go-with-kafka/</link>
      <pubDate>Mon, 09 Oct 2023 16:52:34 -0600</pubDate>
      
      <guid>https://ancordss.github.io/post/getting-staterd-go-with-kafka/</guid>
      <description>Prerequisites Before diving into Go and Kafka integration, ensure you have the following tools installed on your system:
Go Docker Docker Compose Setting Up Kafka with Docker Compose To get started with Kafka, we&amp;rsquo;ll use Docker Compose to create a local Kafka environment. Below is a docker-compose.yml file that sets up Kafka with Zookeeper and Kafdrop for monitoring:
yaml `version: &amp;#39;3&amp;#39; services: zookeeper: image: confluentinc/cp-zookeeper:7.3.2 container_name: zookeeper environment: ZOOKEEPER_CLIENT_PORT: 2181 ZOOKEEPER_TICK_TIME: 2000 broker: image: confluentinc/cp-kafka:7.</description>
    </item>
    
    <item>
      <title>Cli app schedule</title>
      <link>https://ancordss.github.io/post/go-horario/</link>
      <pubDate>Sat, 06 Aug 2022 01:24:33 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/go-horario/</guid>
      <description>Preview Install Clone the repository or download the package from here:
https://github.com/Ancordss/CLI-HorarioAPP.git
enter the folder open terminal and run this command
-\.install.ps1 now run the following command
- [x] Get-Variable Profile It will show something like this: go to the address shown in the terminal
open the file ending with ##profile.ps1
copy and paste the following command at the end of the file
- [x] Set-Alias h &amp;#39;C:\schedule\schedule.exe&amp;#39; Close and open the terminal again to run the program place h and hit enter</description>
    </item>
    
    <item>
      <title>Creating Hugo Website on Archlinux</title>
      <link>https://ancordss.github.io/post/creating-hugo-website/</link>
      <pubDate>Sat, 30 Apr 2022 16:49:30 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/creating-hugo-website/</guid>
      <description>this is the second page i make with hugo this is my blog and my website in this short post i will show you how to create a page with hugo in linux so let&amp;rsquo;s start Step 1 install Hugo - Pacman -Sy hugo Step 2 create a new site - hugo new site quickstart Step 3 Add a theme (you can go to themes.gohugo.io/ and search for one)
cd quickstart git init git submodule add https://github.</description>
    </item>
    
  </channel>
</rss>
