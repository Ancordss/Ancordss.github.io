<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Ancordss-Blog!</title>
    <link>https://ancordss.github.io/post/</link>
    <description>Recent content in Posts on Ancordss-Blog!</description>
    <image>
      <url>https://avatars.githubusercontent.com/u/87324382?s=400&amp;u=3a0cbb2958a9346ac0d43164be8903afb12a511e&amp;v=4</url>
      <link>https://avatars.githubusercontent.com/u/87324382?s=400&amp;u=3a0cbb2958a9346ac0d43164be8903afb12a511e&amp;v=4</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 Oct 2023 16:52:34 -0600</lastBuildDate><atom:link href="https://ancordss.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Go-Kafka implementation</title>
      <link>https://ancordss.github.io/post/getting-staterd-go-with-kafka/</link>
      <pubDate>Mon, 09 Oct 2023 16:52:34 -0600</pubDate>
      
      <guid>https://ancordss.github.io/post/getting-staterd-go-with-kafka/</guid>
      <description>Prerequisites Before diving into Go and Kafka integration, ensure you have the following tools installed on your system:
Go Docker Docker Compose Setting Up Kafka with Docker Compose To get started with Kafka, we&amp;rsquo;ll use Docker Compose to create a local Kafka environment. Below is a docker-compose.yml file that sets up Kafka with Zookeeper and Kafdrop for monitoring:
yaml `version: &amp;#39;3&amp;#39; services: zookeeper: image: confluentinc/cp-zookeeper:7.3.2 container_name: zookeeper environment: ZOOKEEPER_CLIENT_PORT: 2181 ZOOKEEPER_TICK_TIME: 2000 broker: image: confluentinc/cp-kafka:7.</description>
    </item>
    
    <item>
      <title>DevOps Ci/Cd python,docker,jenkins</title>
      <link>https://ancordss.github.io/post/devops-project04/</link>
      <pubDate>Fri, 26 Aug 2022 19:32:23 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/devops-project04/</guid>
      <description>Steps Continuos integration merge all code work into a master branch code reviews, copile,build, unit tests,integration tests Continuos delivery deploy to test Server (in this case azure vm) UAT,QA build are delivered throughout the life cycle Continuis Deployment deploy to prod sercer or release Work Job in this case where deploy the image in the same machine where jenkins is running and if it is successful then it is going to publish it to the docker hub and then the next stage jenkins will actually deploy the image to the server</description>
    </item>
    
    <item>
      <title>DevOps CI/CD Project 02</title>
      <link>https://ancordss.github.io/post/devops-project02/</link>
      <pubDate>Tue, 09 Aug 2022 22:18:56 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/devops-project02/</guid>
      <description>Simple DevOps Project -02 Prerequisites: Ansible server Jenkins Server Tocmat Server Part-01 Integration Setps Install &amp;ldquo;publish Over SSH&amp;rdquo;
Manage Jenkins &amp;gt; Manage Plugins &amp;gt; Available &amp;gt; Publish over SSH Enable connection between Ansible and Jenkins
Manage Jenkins &amp;gt; Configure System &amp;gt; Publish Over SSH &amp;gt; SSH Servers
SSH Servers: Hostname:&amp;lt;ServerIP&amp;gt; username: ansadmin password: ******* Test the connection &amp;ldquo;Test Connection&amp;rdquo;
Part-02 - Execute job to connect create a copywarfile.yml on Ansible under /opt/playbooks</description>
    </item>
    
    <item>
      <title>DevOps CI/CD 1</title>
      <link>https://ancordss.github.io/post/devops-project01/</link>
      <pubDate>Sun, 07 Aug 2022 19:43:44 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/devops-project01/</guid>
      <description>Simple DevOps Project -01 We know how to use work with each and Git, Jenkins independently. What if you want to collaborate these two? that is where Simple DevOps project helps you. Follow below steps if you are a new guy to DevOps. You love it.
Prerequisites Azure vm with tomcat installation Jenkins server Part-01 : Adding steps for Integration Steps to create Jenkin job Login to Jenkins console Create Jenkins job, Fill the following details, Source Code Management: Repository: https://github.</description>
    </item>
    
    <item>
      <title>Metodologia_scrum</title>
      <link>https://ancordss.github.io/post/meto_scrum/</link>
      <pubDate>Sat, 06 Aug 2022 22:18:02 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/meto_scrum/</guid>
      <description>que es Scrum es una metodologia de gestion de proyectos, framework con metodologia agile
es una guia que cada equipo puede adaptar a sus necesidades
[insertar imagen]
el proyecto esta representado en una bombilla
hitories representan funcionalidades
grupo de Scrum propietario del proyecto seria un intermediario entre el equipo y los stakeholders
gestiona el backlog del proyecto prioriza los despliegues contaco directo con los stakeholders Desarrolladores quienes implementan todo el codigo</description>
    </item>
    
    <item>
      <title>Metodologia Agile</title>
      <link>https://ancordss.github.io/post/meto_agile/</link>
      <pubDate>Sat, 06 Aug 2022 21:41:09 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/meto_agile/</guid>
      <description>que es agile metodologia de desarrollo de paradigmas
se divide el projecto en diferentes etapas llamados sprints
metodologia -&amp;gt; Filosofia
proyecto por etapas
Adaptacion al cliente
en 2001 se crea el manifiesto for agile sofware Develpment
https://agilemanifesto.org/iso/es/manifesto.html
Agile vs waterfall insertar imagen
beneficios e inconvenientes ventas inconvenientes estapas mas pequenias -&amp;gt; trabajo mas rapido dificil de preveer los recursos necesarios adaptabilidad equipo necesita base mas solidad y habilidades facilita la priorizacion Requiere un contacto constante con el cliente encontrar errores de forma sencilla poca documentacion -&amp;gt; dificil nuevas incorporaciones proyecto mas transparente falta de limites en el proyecto feedback casi inmediato de usuarios flexibilidad interaccion continua con el clinete 12 Principios Agile 1</description>
    </item>
    
    <item>
      <title>Cli app schedule</title>
      <link>https://ancordss.github.io/post/go-horario/</link>
      <pubDate>Sat, 06 Aug 2022 01:24:33 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/go-horario/</guid>
      <description>Preview Install Clone the repository or download the package from here:
https://github.com/Ancordss/CLI-HorarioAPP.git
enter the folder open terminal and run this command
-\.install.ps1 now run the following command
- [x] Get-Variable Profile It will show something like this: go to the address shown in the terminal
open the file ending with ##profile.ps1
copy and paste the following command at the end of the file
- [x] Set-Alias h &amp;#39;C:\schedule\schedule.exe&amp;#39; Close and open the terminal again to run the program place h and hit enter</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://ancordss.github.io/post/kubernetes/</link>
      <pubDate>Sat, 06 Aug 2022 00:49:56 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/kubernetes/</guid>
      <description>What is Kubernetes? is a technology that allows to orchestrate docker containers componenetes:
control plane Node Scheduler kube-proxy kubelet etcd controller manager Cloud controller manager Api server notes for using kubernets requirements: docker
install kubectl and kubernetes have docker installed
to use or practice using minikube to start minikube running :
sudo sysctl fs.protected_regular=0 sudo minikube start commands can now be executed [run as root]
most used commands kubectl config get-contexts kubectl get ns [show pods] kubectl -n kube-system get pods [you can pass more commands like -o wide] kubectl delete pod &amp;#34;pod name&amp;#34; kubectl delete -f &amp;#34;file name&amp;#34; [delete the pods that the file creates] kubectl get pod &amp;#34;pod name&amp;#34; [to see the state of the pod, you can pass -o yaml and it will show all the yaml of the pod ] kubectl describe pod &amp;#34;pod name&amp;#34; kubectl get pvc kubectl delete pvc &amp;#34;pvc name&amp;#34; kubectl get sts kubectl delete sts &amp;#34;statefulset name&amp;#34; manifests [to understand review 01-pod.</description>
    </item>
    
    <item>
      <title>Kubernetes[espa] </title>
      <link>https://ancordss.github.io/post/kubernetes_es/</link>
      <pubDate>Tue, 10 May 2022 16:02:38 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/kubernetes_es/</guid>
      <description>que es Kubernetes? es una tecnologia que permite orquestar contenedores docker componenetes: control plane Node Scheduler kube-proxy kubelet etcd controller manager Cloud controller manager Api server notas para usar kubernets requisitos: docker
instalar kubectl y kubernetes tener instalado docker
para usar o practicar usar minikube para iniciar minikube correr :
sudo sysctl fs.protected_regular=0 sudo minikube start ahora ya se pueden ejecutar comandos [ejecutar como root]
comandos mas usados kubectl config get-contexts kubectl get ns [para ver pods] kubectl -n kube-system get pods [se le puden pasar mas comandos como -o wide] kubectl delete pod &amp;#34;nombre del pod&amp;#34; kubectl delete -f &amp;#34;nombre del archivo&amp;#34; [elimina los pods que crea el archivo] kubectl get pod &amp;#34;nombre del pod&amp;#34; [para ver el estado del pod, se le puede pasar -o yaml y mostrara todo el yaml del pod ] kubectl describe pod &amp;#34;nombre del pod&amp;#34; kubectl get pvc kubectl delete pvc &amp;#34;nombre del pvc&amp;#34; kubectl get sts kubectl delete sts &amp;#34;nombre del statefulset&amp;#34; manifiestos [para entender revisar 01-pod.</description>
    </item>
    
    <item>
      <title>Ansible | creando Playbooks</title>
      <link>https://ancordss.github.io/post/ansible2/</link>
      <pubDate>Thu, 05 May 2022 15:45:55 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/ansible2/</guid>
      <description>Un playbook es un archivo donde se escribiran todas las tareas que quieres que se hagan con ansible es escrito en yml y es mas facil porque solo tendremos que ejecutarlo no tendremos que escribir cada comando y recordarlo. Primer paso crearemos una archivo llamado tareas.yml segundo paso escribiremos el siguiente codigo:
--- - hosts: all name: creando un playbook become: true task: - name: instala vim apt: name=vim state=present - name: comando shell shell: echo hola - name: detiene servicio service: name=nginx state=stoppeda - name: start servicio service: name=nginx state=started &amp;ndash; [En la variable hosts podemos especificar ip/dominio igual podemos colocar el nombre de los grupos a los que queremos que se les apliquen estos cambios]</description>
    </item>
    
    <item>
      <title>Iniciando con Ansible</title>
      <link>https://ancordss.github.io/post/ansible1/</link>
      <pubDate>Wed, 04 May 2022 16:57:32 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/ansible1/</guid>
      <description>para instalar ansible agrega el repositoria a ubuntu y luego correo sudo apt install ansible
para que funcione bien tienes que tener un servidor al cual conectarte con ssh en mi caso estoy usando uno que cree con una maquin virtual
comando para probar un ping ssh usuario@ip -p puerto en mi caso es
ssh anco@192.168.1.8 -p 22 si todo sale bien ahora podras controlar el servidor desde tu maquina.</description>
    </item>
    
    <item>
      <title>Creating Hugo Website on Archlinux</title>
      <link>https://ancordss.github.io/post/creating-hugo-website/</link>
      <pubDate>Sat, 30 Apr 2022 16:49:30 +0000</pubDate>
      
      <guid>https://ancordss.github.io/post/creating-hugo-website/</guid>
      <description>this is the second page i make with hugo this is my blog and my website in this short post i will show you how to create a page with hugo in linux so let&amp;rsquo;s start Step 1 install Hugo - Pacman -Sy hugo Step 2 create a new site - hugo new site quickstart Step 3 Add a theme (you can go to themes.gohugo.io/ and search for one)
cd quickstart git init git submodule add https://github.</description>
    </item>
    
  </channel>
</rss>
